// automatically generated by the FlatBuffers compiler, do not modify

package org.odict.java.schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Usage extends Table {
  public static Usage getRootAsUsage(ByteBuffer _bb) { return getRootAsUsage(_bb, new Usage()); }
  public static Usage getRootAsUsage(ByteBuffer _bb, Usage obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Usage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String pos() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer posAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public String definitions(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int definitionsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public Group groups(int j) { return groups(new Group(), j); }
  public Group groups(Group obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int groupsLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }

  public static int createUsage(FlatBufferBuilder builder,
      int posOffset,
      int definitionsOffset,
      int groupsOffset) {
    builder.startObject(3);
    Usage.addGroups(builder, groupsOffset);
    Usage.addDefinitions(builder, definitionsOffset);
    Usage.addPos(builder, posOffset);
    return Usage.endUsage(builder);
  }

  public static void startUsage(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addPos(FlatBufferBuilder builder, int posOffset) { builder.addOffset(0, posOffset, 0); }
  public static void addDefinitions(FlatBufferBuilder builder, int definitionsOffset) { builder.addOffset(1, definitionsOffset, 0); }
  public static int createDefinitionsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDefinitionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addGroups(FlatBufferBuilder builder, int groupsOffset) { builder.addOffset(2, groupsOffset, 0); }
  public static int createGroupsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startGroupsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endUsage(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

